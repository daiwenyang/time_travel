/**
 * 概念
 *      在程序设计中，若一个函数符合以下要求，则它可能被认为是纯函数：
 *          1、此函数在相同的输入值时，需产生相同的输出。函数的输出和输入值以外的其他隐藏信息或状态无关，也和由I/O设备产生的外部输出无关。
 *          2、该函数不能有语义上可观察的函数副作用，诸如“触发事件”，使输出设备输出，或更改输出值以外物件的内容等。
 * 
 *      无状态函数式组件可以写成纯函数，只传入props和content作为参数，也就是不存在state,当然可以用hook弥补，
 *      没有生命周期方法，proptypes和defaultProps可以通过静态属性设置；  
 * 
 * */

 /**
 * 特点：
 *      1、没有生命周期；
 *      2、无组件实例；（意味着无法采用ref获取）
 *      3、没有内部状态
 *      
 * */


 /**
 * 优点：
 *      1、性能优化，没有生命周期，不存在管理这部分内容；
 *      2、去除掉this,避免引用的不清晰；
 *      3、避免了class、extends等，代码更简洁，内存占用小；
 *      
 *      
 * */

 /**
 * 缺点：
 *      1、无法获取实例；
 *      2、缺少shouldComponentUpdate，无法避免重复渲染；
 *      
 * */

 /**
 * 避免重复渲染的方式
 *       React.useCallback结合 React.memo的方式；
 *      React.useCallback避免函数的改变导致重新渲染；
 *      React.memo避免父组件的render导致子组件的重新渲染
 * 引用地址：https://juejin.im/post/6844903989524299783#heading-2 
 *      
 * */



